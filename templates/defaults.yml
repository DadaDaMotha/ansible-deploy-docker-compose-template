---

# generated by \VAR{ role_name }.

# dedicated user that owns the repo, will be added to the docker group
\VAR{ cli_output['defaults_prefix'] }user: \VAR{ docker_user }
\VAR{ cli_output['defaults_prefix'] }user_id: \VAR{ docker_user_id }
\VAR{ cli_output['defaults_prefix'] }ext_net: \VAR{ cli_output['external_proxy_net'] }
\VAR{ cli_output['defaults_prefix'] }project_name: \VAR{ cli_output['role_name'] }

# service state corresponding to docker-compose up and down
# this does not influence if the user will be destroyed
\VAR{ cli_output['defaults_prefix'] }state: present

# remove the repository source directory
\VAR{ cli_output['defaults_prefix'] }remove: false


# environment from files:
\BLOCK{ for file in cli_output['compose_files'] }
# - \VAR{ file | basename }
\BLOCK{ endfor }

\BLOCK{ for svc, service_defaults in cli_output['defaults'] | groupby('service') }
# environment config for \VAR{ svc } service
\BLOCK{ for data in service_defaults }
\BLOCK{ if not data.is_secret }
\VAR{ data.key }: \VAR{ data.value }
\BLOCK{ endif }
\BLOCK{ endfor }
\BLOCK{ endfor }

\BLOCK{ for svc, service_defaults in cli_output['defaults'] | groupby('service') }
# secrets environment config for \VAR{ svc | default('ansible') } service
\BLOCK{ for data in service_defaults }
\BLOCK{ if data.is_secret }
\VAR{ data.key }: \VAR{ data.value }
\BLOCK{ endif }
\BLOCK{ endfor }
\BLOCK{ endfor }

\BLOCK{ if cli_output['volume_defaults'] }
# defaults for volume mounts
\BLOCK{ for val, key in cli_output['volume_defaults'].items() }
\VAR{ key }: "\VAR{ val }"
\BLOCK{ endfor }
\BLOCK{ endif }

# pre-docker compose command using command module
\VAR{ cli_output['defaults_prefix'] }pre_startup_commands: []

# post-docker down commands
\VAR{ cli_output['defaults_prefix'] }post_shutdown_commands: []

# enable automatic updates for latest tag
\VAR{ cli_output['defaults_prefix'] }auto_update: false

# When to update the contains using cron
\VAR{ cli_output['defaults_prefix'] }auto_update_cron_hour: "3"
\VAR{ cli_output['defaults_prefix'] }auto_update_cron_minute: "0"
\VAR{ cli_output['defaults_prefix'] }auto_update_cron_weekday: "0"
\VAR{ cli_output['defaults_prefix'] }auto_update_cron_month: "*"
