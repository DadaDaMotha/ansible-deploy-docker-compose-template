---

# generated by [[ role_name ]].

# dedicated user that owns the repo, will be added to the docker group
[[ cli_output['defaults_prefix'] ]]user: [[ docker_user ]]
[[ cli_output['defaults_prefix'] ]]user_id: [[ docker_user_id ]]
[[ cli_output['defaults_prefix'] ]]ext_net: [[ cli_output['external_proxy_net'] ]]
[[ cli_output['defaults_prefix'] ]]project_name: [[ cli_output['role_name'] ]]

# service state corresponding to docker-compose up and down
# this does not influence if the user will be destroyed
[[ cli_output['defaults_prefix'] ]]state: present

# remove the repository source directory
[[ cli_output['defaults_prefix'] ]]remove: false


# environment from files:
[% for file in cli_output['compose_files'] %]
# - [[ file | basename ]]
[% endfor %]

[% for svc, service_defaults in cli_output['defaults'] | groupby('service') %]
# environment config for [[ svc ]] service
[% for data in service_defaults %]
[% if not data.is_secret %]
[[ data.key ]]: [[ data.value ]]
[% endif %]
[% endfor %]
[% endfor %]

[% for svc, service_defaults in cli_output['defaults'] | groupby('service') %]
# secrets environment config for [[ svc | default('ansible') ]] service
[% for data in service_defaults %]
[% if data.is_secret %]
[[ data.key ]]: [[ data.value ]]
[% endif %]
[% endfor %]
[% endfor %]

[% if cli_output['volume_defaults'] %]
# defaults for volume mounts
[% for val, key in cli_output['volume_defaults'].items() %]
[[ key ]]: "[[ val ]]"
[% endfor %]
[% endif %]

# pre-docker compose command using command module
[[ cli_output['defaults_prefix'] ]]pre_startup_commands: []

# post-docker down commands
[[ cli_output['defaults_prefix'] ]]post_shutdown_commands: []

# enable automatic updates for latest tag
[[ cli_output['defaults_prefix'] ]]auto_update: false

# When to update the contains using cron
[[ cli_output['defaults_prefix'] ]]auto_update_cron_hour: "3"
[[ cli_output['defaults_prefix'] ]]auto_update_cron_minute: "0"
[[ cli_output['defaults_prefix'] ]]auto_update_cron_weekday: "0"
[[ cli_output['defaults_prefix'] ]]auto_update_cron_month: "*"

# removes previously installed python package docker and docker-compose
remove_legacy_docker_python_deps: false
# virtual env for python deps controlling docker
docker_utils_venv_path: /opt/ansible_venvs/docker_venv
compose_v1: false
